# Generated by Django 5.1.4 on 2025-02-01 11:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='customer')),
                ('customer_id', models.CharField(max_length=50, unique=True)),
                ('customer_name', models.CharField(max_length=50)),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('customer_phone', models.IntegerField(blank=True, null=True)),
                ('customer_address', models.TextField(blank=True, null=True)),
                ('customer_city', models.CharField(blank=True, max_length=150, null=True)),
                ('customer_state', models.CharField(choices=[('Andhra Pradesh [37]', 'Andhra Pradesh [37]'), ('Arunachal Pradesh [12]', 'Arunachal Pradesh [12]'), ('Assam [18]', 'Assam [18]'), ('Bihar [10]', 'Bihar [10]'), ('Chhattisgarh [22]', 'Chhattisgarh [22]'), ('Goa [30]', 'Goa [30]'), ('Gujarat [24]', 'Gujarat [24]'), ('Haryana [06]', 'Haryana [06]'), ('Himachal Pradesh [02]', 'Himachal Pradesh [02]'), ('Jharkhand [20]', 'Jharkhand [20]'), ('Karnataka [29]', 'Karnataka [29]'), ('Kerala [32]', 'Kerala [32]'), ('Madhya Pradesh [23]', 'Madhya Pradesh [23]'), ('Maharashtra [27]', 'Maharashtra [27]'), ('Manipur [14]', 'Manipur [14]'), ('Meghalaya [17]', 'Meghalaya [17]'), ('Mizoram [15]', 'Mizoram [15]'), ('Nagaland [13]', 'Nagaland [13]'), ('Odisha [21]', 'Odisha [21]'), ('Punjab [03]', 'Punjab [03]'), ('Rajasthan [08]', 'Rajasthan [08]'), ('Sikkim [11]', 'Sikkim [11]'), ('Tamil Nadu [33]', 'Tamil Nadu [33]'), ('Telangana [36]', 'Telangana [36]'), ('Tripura [16]', 'Tripura [16]'), ('Uttar Pradesh [09]', 'Uttar Pradesh [09]'), ('Uttarakhand [05]', 'Uttarakhand [05]'), ('West Bengal [19]', 'West Bengal [19]'), ('Andaman and Nicobar Islands [35]', 'Andaman and Nicobar Islands [35]'), ('Chandigarh [04]', 'Chandigarh [04]'), ('Dadra and Nagar Haveli and Daman and Diu [26]', 'Dadra and Nagar Haveli and Daman and Diu [26]'), ('Delhi [07]', 'Delhi [07]'), ('Jammu and Kashmir [01]', 'Jammu and Kashmir [01]'), ('Ladakh [38]', 'Ladakh [38]'), ('Lakshadweep [31]', 'Lakshadweep [31]'), ('Puducherry [34]', 'Puducherry [34]')], max_length=150)),
                ('customer_description', models.TextField(blank=True, null=True)),
                ('customer_gst_or_uid', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_pan', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_account_balance', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductBrandModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50)),
                ('brand_description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('category_description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseStockModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_type', models.BooleanField(default=False)),
                ('purchase_bill_id', models.IntegerField(unique=True)),
                ('bill_discount_percentage', models.IntegerField(blank=True, null=True)),
                ('bill_discount_amount', models.IntegerField(blank=True, null=True)),
                ('total_discount_amount', models.IntegerField(blank=True, null=True)),
                ('total_tax_amount', models.IntegerField(blank=True, null=True)),
                ('total_units', models.IntegerField()),
                ('total_amount', models.IntegerField()),
                ('invoice_no', models.CharField(max_length=50)),
                ('invoice_date', models.DateField()),
                ('reference_no_1', models.CharField(blank=True, max_length=50, null=True)),
                ('reference_no_2', models.CharField(blank=True, max_length=50, null=True)),
                ('purchase_type', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('online pay', 'Online Pay')], default='cash', max_length=50)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShippedFromModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_1', models.CharField(max_length=50)),
                ('add_2', models.CharField(max_length=50)),
                ('contact', models.CharField(max_length=50)),
                ('gstin', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SupplierModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='supplier')),
                ('supplier_id', models.CharField(max_length=50, unique=True)),
                ('supplier_name', models.CharField(max_length=50)),
                ('supplier_sub_name', models.CharField(max_length=50, null=True)),
                ('supplier_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('supplier_phone', models.IntegerField(blank=True, null=True)),
                ('supplier_address', models.TextField(blank=True, null=True)),
                ('supplier_city', models.CharField(blank=True, max_length=150, null=True)),
                ('supplier_state', models.CharField(choices=[('Andhra Pradesh [37]', 'Andhra Pradesh [37]'), ('Arunachal Pradesh [12]', 'Arunachal Pradesh [12]'), ('Assam [18]', 'Assam [18]'), ('Bihar [10]', 'Bihar [10]'), ('Chhattisgarh [22]', 'Chhattisgarh [22]'), ('Goa [30]', 'Goa [30]'), ('Gujarat [24]', 'Gujarat [24]'), ('Haryana [06]', 'Haryana [06]'), ('Himachal Pradesh [02]', 'Himachal Pradesh [02]'), ('Jharkhand [20]', 'Jharkhand [20]'), ('Karnataka [29]', 'Karnataka [29]'), ('Kerala [32]', 'Kerala [32]'), ('Madhya Pradesh [23]', 'Madhya Pradesh [23]'), ('Maharashtra [27]', 'Maharashtra [27]'), ('Manipur [14]', 'Manipur [14]'), ('Meghalaya [17]', 'Meghalaya [17]'), ('Mizoram [15]', 'Mizoram [15]'), ('Nagaland [13]', 'Nagaland [13]'), ('Odisha [21]', 'Odisha [21]'), ('Punjab [03]', 'Punjab [03]'), ('Rajasthan [08]', 'Rajasthan [08]'), ('Sikkim [11]', 'Sikkim [11]'), ('Tamil Nadu [33]', 'Tamil Nadu [33]'), ('Telangana [36]', 'Telangana [36]'), ('Tripura [16]', 'Tripura [16]'), ('Uttar Pradesh [09]', 'Uttar Pradesh [09]'), ('Uttarakhand [05]', 'Uttarakhand [05]'), ('West Bengal [19]', 'West Bengal [19]'), ('Andaman and Nicobar Islands [35]', 'Andaman and Nicobar Islands [35]'), ('Chandigarh [04]', 'Chandigarh [04]'), ('Dadra and Nagar Haveli and Daman and Diu [26]', 'Dadra and Nagar Haveli and Daman and Diu [26]'), ('Delhi [07]', 'Delhi [07]'), ('Jammu and Kashmir [01]', 'Jammu and Kashmir [01]'), ('Ladakh [38]', 'Ladakh [38]'), ('Lakshadweep [31]', 'Lakshadweep [31]'), ('Puducherry [34]', 'Puducherry [34]')], max_length=150)),
                ('supplier_description', models.TextField(blank=True, null=True)),
                ('supplier_gst_or_uid', models.CharField(blank=True, max_length=50, null=True)),
                ('supplier_pan', models.CharField(blank=True, max_length=50, null=True)),
                ('supplier_account_balance', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BillModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_type', models.BooleanField(default=False)),
                ('bill_id', models.IntegerField(unique=True)),
                ('bill_discount_percentage', models.IntegerField(blank=True, null=True)),
                ('bill_discount_amount', models.IntegerField(blank=True, null=True)),
                ('total_discount_amount', models.IntegerField(blank=True, null=True)),
                ('total_tax_amount', models.IntegerField(blank=True, null=True)),
                ('total_units', models.IntegerField()),
                ('total_amount', models.IntegerField()),
                ('invoice_no', models.CharField(max_length=50)),
                ('invoice_date', models.DateField()),
                ('reference_no_1', models.CharField(blank=True, max_length=50, null=True)),
                ('reference_no_2', models.CharField(blank=True, max_length=50, null=True)),
                ('purchase_type', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('online pay', 'Online Pay')], default='cash', max_length=50)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billing.customermodel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=150)),
                ('product_code', models.CharField(max_length=50, unique=True)),
                ('product_description', models.TextField(blank=True, null=True)),
                ('product_hsn', models.CharField(max_length=50)),
                ('product_barcode', models.CharField(blank=True, max_length=50, null=True)),
                ('product_packtype', models.CharField(choices=[('kg', 'Kg'), ('pack', 'Pack'), ('littre', 'Littre'), ('bottle', 'Bottle')], default='Kg', max_length=50)),
                ('pack_size', models.DecimalField(decimal_places=3, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.productbrandmodel')),
                ('product_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.productcategorymodel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseStockProductModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hsn', models.CharField(max_length=50)),
                ('pack_size', models.DecimalField(decimal_places=3, max_digits=5)),
                ('mrp', models.IntegerField()),
                ('sales_price', models.IntegerField()),
                ('units', models.IntegerField(default=1)),
                ('batch_no', models.CharField(max_length=50)),
                ('discount_percentage_1', models.IntegerField(blank=True, null=True)),
                ('discount_amount_1', models.IntegerField(blank=True, null=True)),
                ('discount_percentage_2', models.IntegerField(blank=True, null=True)),
                ('discount_amount_2', models.IntegerField(blank=True, null=True)),
                ('discount_unit', models.IntegerField(blank=True, null=True)),
                ('sgst_percentage', models.IntegerField(blank=True, null=True)),
                ('sgst_amount', models.IntegerField(blank=True, null=True)),
                ('cgst_percentage', models.IntegerField(blank=True, null=True)),
                ('cgst_amount', models.IntegerField(blank=True, null=True)),
                ('igst_percentage', models.IntegerField(blank=True, null=True)),
                ('igst_amount', models.IntegerField(blank=True, null=True)),
                ('manufacturing', models.DateField(blank=True, null=True)),
                ('expiring', models.DateField(blank=True, null=True)),
                ('total_quantity', models.IntegerField()),
                ('total_price', models.IntegerField()),
                ('totalTax', models.IntegerField()),
                ('grandTotal', models.IntegerField()),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billing.productmodel')),
                ('purchase_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.purchasestockmodel')),
            ],
        ),
        migrations.CreateModel(
            name='BillProductModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=150)),
                ('product_code', models.CharField(max_length=50, unique=True)),
                ('product_description', models.TextField(blank=True, null=True)),
                ('product_brand', models.CharField(max_length=50, null=True)),
                ('product_category', models.CharField(max_length=50, null=True)),
                ('product_hsn', models.CharField(max_length=50)),
                ('product_barcode', models.CharField(max_length=50, null=True)),
                ('product_packtype', models.CharField(choices=[('kg', 'Kg'), ('pack', 'Pack'), ('littre', 'Littre'), ('bottle', 'Bottle')], default='kg', max_length=50)),
                ('pack_size', models.DecimalField(decimal_places=3, max_digits=5)),
                ('mrp', models.IntegerField()),
                ('sales_price', models.IntegerField()),
                ('units', models.IntegerField(default=1)),
                ('batch_no', models.CharField(max_length=50)),
                ('discount_percentage_1', models.IntegerField(blank=True, null=True)),
                ('discount_amount_1', models.IntegerField(blank=True, null=True)),
                ('discount_percentage_2', models.IntegerField(blank=True, null=True)),
                ('discount_amount_2', models.IntegerField(blank=True, null=True)),
                ('discount_unit', models.IntegerField(blank=True, null=True)),
                ('sgst_percentage', models.IntegerField(blank=True, null=True)),
                ('sgst_amount', models.IntegerField(blank=True, null=True)),
                ('cgst_percentage', models.IntegerField(blank=True, null=True)),
                ('cgst_amount', models.IntegerField(blank=True, null=True)),
                ('igst_percentage', models.IntegerField(blank=True, null=True)),
                ('igst_amount', models.IntegerField(blank=True, null=True)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billmodel')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billing.purchasestockproductmodel')),
            ],
        ),
        migrations.AddField(
            model_name='purchasestockmodel',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billing.suppliermodel'),
        ),
    ]
